<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.semi.mapper.MoimMapper">
	<select id="getMaxNum" resultType="int">
		select ifnull(max(mnum),0) from moim
	</select>
	<select id="getTotalCount" parameterType="String" resultType="int">
		select count(*) from moim
		<if test="category!=null and city1!=null and city2!=null">where category=#{category} and city1=#{city1} and city2=#{city2}</if>
		<if test="category!=null and city1!=null and city2==null">where category=#{category} and city1=#{city1}</if>
		<if test="category!=null and city1==null and city2==null">where category=#{category}</if>
		<if test="category==null and city1!=null and city2!=null">where city1=#{city1} and city2=#{city2}</if>
		<if test="category==null and city1!=null and city2==null">where city1=#{city1}</if>
	</select>
	<select id="getAllMoim" resultType="MoimDto">
		select * from moim order by mnum asc
	</select>
	<insert id="insertMoim" parameterType="MoimDto">
		insert into moim (mname,unum,mphoto,mcontent,city1,city2,category,open,createday) values
		(#{mname},#{unum},#{mphoto},#{mcontent},#{city1},#{city2},#{category},#{open},now())
	</insert>
	<select id="getPagingList" parameterType="Map" resultType="MoimDto">		
		SELECT *,(SELECT COUNT(mm.mmnum) as mcoun from moimmember mm where mm.mnum = m.mnum and acceptcall=1) as mcount from moim m 
		<if test="category!=null and city1!=null and city2!=null">where category=#{category} and city1=#{city1} and city2=#{city2}</if>
		<if test="category!=null and city1!=null and city2==null">where category=#{category} and city1=#{city1}</if>
		<if test="category!=null and city1==null and city2==null">where category=#{category}</if>
		<if test="category==null and city1!=null and city2!=null">where city1=#{city1} and city2=#{city2}</if>
		<if test="category==null and city1!=null and city2==null">where city1=#{city1}</if>
		<include refid="sort" />
		<!-- order by mnum desc limit #{start},#{perpage} -->
	</select>
	<sql id="sort">
		<if test="sort == null">
		order by mnum desc limit #{start},#{perpage}
		</if>
		<if test="sort == 'moimnum'">
		order by mnum desc limit #{start},#{perpage}
		</if>		
		<if test="sort == 'mcount'">
		order by mcount desc limit #{start},#{perpage}
		</if>
	</sql>
	<select id="getData" parameterType="int" resultType="MoimDto">		
		SELECT *,(SELECT COUNT(mm.mmnum) as mcoun from moimmember mm where mm.mnum = m.mnum) as mcount from moim m where mnum=#{mnum}
	</select>
	<delete id="deleteMoim" parameterType="int">
		delete from moim where mnum=#{mnum}
	</delete>
	<update id="updateMoim" parameterType="MoimDto">
		update moim set mname=#{mname}
		<if test="mphoto!=''">
			,mphoto=#{mphoto}
		</if>
		,mcontent=#{mcontent} where mnum=#{mnum}
	</update>
	<select id="overlappedMname" parameterType="MoimDto" resultType="int">
		select count(mname) from moim where mname=#{mname}
	</select>
	<insert id="updateJjimcount" parameterType="Map">
		insert into jjim (unum, mnum) values (#{unum}, #{mnum})
	</insert>
	<select id="pressJjim" parameterType="Map" resultType="int">
		select count(*) from jjim where unum=#{unum} and mnum=#{mnum}
	</select>
	<delete id="deleteJjim" parameterType="Map">
		delete from jjim where unum=#{unum} and mnum=#{mnum}
	</delete>
	<insert id="moimGaip" parameterType="Map">
		insert into moimmember (unum, mnum) values (#{unum}, #{mnum})
	</insert>
	<delete id="deleteGaip" parameterType="Map">
		delete from moimmember where unum=#{unum} and mnum=#{mnum}
	</delete>
	<select id="pressGaip" parameterType="Map" resultType="int">
		select count(*) from moimmember where unum=#{unum} and mnum=#{mnum}
	</select>
	<select id="getGaipmemberList" parameterType="int" resultType="Map">
		SELECT u.uname, u.gender, u.unum, mm.acceptcall FROM user u JOIN moimmember mm ON u.unum=mm.unum where mnum=#{mnum}
	</select>
	<update id="acceptGaip" parameterType="Map">
		update moimmember set acceptcall=1 where unum=#{unum} and mnum=#{mnum}
	</update>
	<delete id="deniedGaip" parameterType="Map">
		delete from moimmember where unum=#{unum} and mnum=#{mnum}
	</delete>
	<select id="acceptChk" parameterType="Map" resultType="Integer">
		select acceptcall from moimmember where unum=#{unum} and mnum=#{mnum}
	</select>
</mapper>

